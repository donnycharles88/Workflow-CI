name: MLflow CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-train:
    runs-on: ubuntu-latest
    
    # Set MLFLOW_TRACKING_URI menggunakan path absolut dari workspace.
    # Ini adalah cara yang paling andal untuk memastikan MLflow dapat menemukan folder 'mlruns' 
    # di lingkungan GitHub Actions.
    env:
      MLFLOW_TRACKING_URI: ${{ github.workspace }}/MLProject/mlruns
      DOCKER_IMAGE_NAME: workflow

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"

      - name: Check Env
        run: |
          echo "Tracking URI: ${{ env.MLFLOW_TRACKING_URI }}"
          echo $CSV_URL
          
      - name: Install dependencies
        run: |
          pip install mlflow pandas scikit-learn numpy

      - name: Run MLflow Project (Training & Logging)
        # Menjalankan dari direktori MLProject/ akan membuat data di lokasi 
        # yang ditunjuk oleh MLFLOW_TRACKING_URI yang baru (menggunakan path absolut).
        run: |
          cd MLProject
          # Mengganti 'tee' dengan redirect sederhana untuk mencegah masalah buffering
          mlflow run . --env-manager=local > modelling.log 2>&1
          tail -n 200 modelling.log || true
          mv modelling.log ..

      # Ambil run_id dari log yang sudah dipindahkan ke root
      - name: Ambil run_id dari log
        id: get_runid
        run: |
          RUN_ID=$(grep -oP 'RUN_ID=\K[0-9a-f]+' modelling.log)
          if [ -f "MLProject/run_id.txt" ]; then
            RUN_ID=$(cat MLProject/run_id.txt)
          elif [ -f "run_id.txt" ]; then
            RUN_ID=$(cat run_id.txt)
          else
            RUN_ID=$(grep -oP 'RUN_ID=\K[0-9a-f]+' modelling.log || true)
          fi
            echo "❌ Gagal mendapatkan RUN_ID. Isi direktori:" 
            ls -la
            echo "Coba lihat MLProject/mlruns:"
            ls -la MLProject/mlruns || true
            exit 1
          fi

          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Run ID berhasil diambil: $RUN_ID"
          echo "::set-output name=run_id::$RUN_ID"
            
      # Build Docker Model
      - name: Build Docker Model
        # MLFLOW_TRACKING_URI yang absolut sudah disetel.
        run: |
          if [ -z "$RUN_ID" ]; then
            echo "❌ RUN_ID kosong, tidak bisa build Docker model"
            exit 1
          fi
          echo "Membangun docker image dari runs:/$RUN_ID/model"
          # Perintah ini sekarang harus berhasil menemukan Run ID
          mlflow models build-docker --model-uri "runs:/$RUN_ID/model" --name "${DOCKER_IMAGE_NAME}"

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Tag the Docker image
      - name: Tag Docker Image
        run: |
          docker tag submission ${{ secrets.DOCKER_HUB_USERNAME }}/submission:latest

      # Push Docker image :
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/submission:latest
          
      - name: Upload artefak (model, log, dan mlruns)
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-artifacts
          path: |
            MLProject/mlruns/
            modelling.log
            
      - name: Simpan tautan Docker Hub sebagai artefak
        run: |
          echo "Docker Hub URL: https://hub.docker.com/r/${{ secrets.DOCKER_HUB_USERNAME }}/submission" > docker_link.txt

      - name: Upload Docker Hub link
        uses: actions/upload-artifact@v4
        with:
          name: docker-hub-link
          path: docker_link.txt
