name: MLflow CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-train:
    runs-on: ubuntu-latest
    
    # Set MLFLOW_TRACKING_URI menggunakan path absolut dari workspace.
    # Ini adalah cara yang paling andal untuk memastikan MLflow dapat menemukan folder 'mlruns' 
    # di lingkungan GitHub Actions.
    env:
      MLFLOW_TRACKING_URI: ${{ github.workspace }}/MLProject/mlruns

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"

      - name: Check Env
        run: |
          echo "Tracking URI: ${{ env.MLFLOW_TRACKING_URI }}"
          echo $CSV_URL
          
      - name: Install dependencies
        run: |
          pip install mlflow pandas scikit-learn numpy

      - name: Run MLflow Project (Training & Logging)
        # Menjalankan dari direktori MLProject/ akan membuat data di lokasi 
        # yang ditunjuk oleh MLFLOW_TRACKING_URI yang baru (menggunakan path absolut).
        run: |
          cd MLProject
          # Mengganti 'tee' dengan redirect sederhana untuk mencegah masalah buffering
          mlflow run . --env-manager=local > modelling.log
          mv modelling.log ..

      # Ambil run_id dari log yang sudah dipindahkan ke root
      - name: Ambil run_id dari log
        run: |
          RUN_ID=$(grep -oP 'RUN_ID=\K[0-9a-f]+' modelling.log)
          if [ -z "$RUN_ID" ]; then
            echo "❌ Gagal mendapatkan RUN_ID dari log."
            exit 1
          fi
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Run ID berhasil diambil: $RUN_ID"

      # Build Docker Model
      - name: Build Docker Model
        # MLFLOW_TRACKING_URI yang absolut sudah disetel.
        run: |
          if [ -z "${{ env.RUN_ID }}" ]; then
            echo "❌ RUN_ID kosong, tidak bisa build Docker model"
            exit 1
          fi
          # Perintah ini sekarang harus berhasil menemukan Run ID
          mlflow models build-docker --model-uri "runs:/${{ env.RUN_ID }}/model" --name "submission"

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Tag the Docker image
      - name: Tag Docker Image
        run: |
          docker tag submission ${{ secrets.DOCKER_HUB_USERNAME }}/submission:latest

      # Push Docker image :
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/submission:latest
